## üõ†Ô∏è **Passo a Passo: Express + PostgreSQL (Render) + Codespaces + Deploy no Render**

### 1. **Crie o reposit√≥rio no GitHub e abra com Codespaces**

1. V√° para [github.com](https://github.com) e crie um novo reposit√≥rio (ex: `biblioteca-express-pg`).
2. No reposit√≥rio criado, clique em `<> Code` > `Codespaces` > `Create codespace on main`.

---

### 2. **Inicialize o projeto Express**

No Codespaces:

```bash
npm init -y
npm install express pg dotenv
```

Crie o arquivo `index.js`:

```js
const express = require('express');
const { Pool } = require('pg');
require('dotenv').config();

const app = express();
const port = process.env.PORT || 3000;

app.use(express.json());

// Conex√£o com o PostgreSQL
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false // necess√°rio para o Render
  }
});

app.get('/', (req, res) => {
  res.send('API de Biblioteca com PostgreSQL e Express!');
});

// Exemplo: Listar categorias
app.get('/categorias', async (req, res) => {
  try {
    const result = await pool.query('SELECT * FROM categoria');
    res.json(result.rows);
  } catch (err) {
    console.error(err);
    res.status(500).send('Erro ao buscar categorias');
  }
});

app.listen(port, () => {
  console.log(`Servidor rodando em http://localhost:${port}`);
});
```

---

### 3. **Crie o `.env` com as credenciais do banco (Render)**

Crie um arquivo `.env`:

```env
DATABASE_URL=postgres://usuario:senha@host:porta/nome_do_banco
```

Exemplo fict√≠cio:

```env
DATABASE_URL=postgres://admin:senha123@dpg-c1b2h4g1f1234k8r1ps0-a.oregon-postgres.render.com:5432/biblioteca_pg
```

> ‚ùó Importante: o Render exige que `ssl` esteja ativado com `rejectUnauthorized: false` como no exemplo acima.

---

### 4. **Adicione um script de inicializa√ß√£o**

No `package.json`, em `"scripts"`:

```json
"scripts": {
  "start": "node index.js"
}
```

---

### 5. **Ignore o `.env`**

Crie um arquivo `.gitignore` com:

```
node_modules/
.env
```

---

### 6. **Configure o banco PostgreSQL no Render**

1. V√° para [https://dashboard.render.com](https://dashboard.render.com)
2. Clique em **Databases** > **New PostgreSQL**
3. D√™ um nome como `biblioteca_pg`
4. Ap√≥s a cria√ß√£o, pegue a string `Internal Database URL` ou `External URL` e use no `.env` local
5. Fa√ßa o *upload* do script SQL que voc√™ forneceu antes (adaptado, se necess√°rio), via DBeaver, pgAdmin ou qualquer cliente PostgreSQL.

---

### 7. **Suba seu c√≥digo para o GitHub**

```bash
git add .
git commit -m "Vers√£o inicial da API Express com PostgreSQL"
git push origin main
```

---

### 8. **Publique no Render (Web Service)**

1. V√° para [Render.com > New > Web Service](https://dashboard.render.com/)
2. Escolha seu reposit√≥rio GitHub
3. Configure:

   * **Name**: `api-biblioteca`
   * **Build Command**: `npm install`
   * **Start Command**: `npm start`
   * **Environment**: Node
   * **Environment Variables**:

     * `DATABASE_URL`: (valor da sua string PostgreSQL do Render)
4. Clique em **Create Web Service**

---

### ‚úÖ Resultado

Voc√™ ter√° sua API Express rodando no Render e conectada ao banco PostgreSQL tamb√©m hospedado l√°.

---

